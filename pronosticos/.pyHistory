import arcpy
from arcpy import env
print(env.workspace)
env.workspace = r'D:\pronosticos'
import arcpy
from arcpy import env
env.workspace = r'D:\pronosticos'
print(env.workspace)
env.workspace = r'D:SIG\pronosticos'
env.workspace = r'D:\SIG\pronosticos'
print(env.workspace)
import arcpy from arcpy import env import xml.dom.minidom as DOM   #set env env.wokspace = r'D:\sig\pronosticos' arcpy.env.overwriteOutput = True  #date date = datetime.datetime.today().strftime('%Y%m%d')  #default paths gfs_today = env.wokspace + r'\gfs_precip_shp_tif_' + date gfs_24h = gfs_today + r'\gfs_precip_gis_24_' + date + r'.shp' gfs_48h = gfs_today + r'\gfs_precip_gis_48_' + date + r'.shp' gfs_72h = gfs_today + r'\gfs_precip_gis_72_' + date + r'.shp' gfs_96h = gfs_today + r'\gfs_precip_gis_96_' + date + r'.shp' gfs_120h = gfs_today + r'\gfs_precip_gis_120_' + date + r'.shp' gfs_144h = gfs_today + r'\gfs_precip_gis_144_' + date + r'.shp' gfs_168h = gfs_today + r'\gfs_precip_gis_168_' + date + r'.shp' gfs_7day = gfs_today + r'\gfs_precip_gis_7day_' + date + r'.shp' costa_rica = env.wokspace + r'\pronosticos\default.gdb\costa_rica' project_gdb = env.workspace + r'\pronosticos\default.gdb'  #outputs gfs_24h_cr = project_gdb + r'\gfs_24h_cr' gfs_48h_cr = project_gdb + r'\gfs_48h_cr' gfs_72h_cr = project_gdb + r'\gfs_72h_cr' gfs_96h_cr = project_gdb + r'\gfs_96h_cr' gfs_120h_cr = project_gdb + r'\gfs_120h_cr' gfs_144h_cr = project_gdb + r'\gfs_144h_cr' gfs_168h_cr = project_gdb + r'\gfs_168h_cr' gfs_7day_cr = project_gdb + r'\gfs_7day_cr'
arcpy.AddField_management(gfs_24h_cr,'inicio', 'DATE')
arcpy.AddField_management(gfs_24h_cr,'Final', 'DATE')
print(date)
print(datetime.now)
print(datetime.now())
print(datetime)
print(time)
datetime.datetime.now()
datetime.datetime.replace(hour = 0,)
datetime.datetime.replace(hour = 0)
datetime.datetime.replace(hour=0)
datetime.replace(hour=0)
sdate = datetime.datetime.now()
sdate.replace(hour= 0)
date2 =datetime.datetime.now()
sdate = date2.replace(hour=0, minute=0, second=0)
print(sdate)
arcpy.CalculateField_management(gfs_24h_cr, 'inicio',sdate, 'PYTHON3')
datetime.datetime.now()
arcpy.CalculateField_management(gfs_24h_cr, 'inicio',sdate, 'PYTHON3')
arcpy.CalculateField_management(gfs_24h_cr, 'inicio',sdate)
arcpy.CalculateField_management(gfs_24h_cr, 'Final',fdate)
fdate = date2.replace(hour=23, minute=59, second=59)
date2 =datetime.datetime.now()
fdate = date2.replace(hour=23, minute=59, second=59)
arcpy.CalculateField_management(gfs_24h_cr, 'Final',fdate)
arcpy.CalculateField_management(gfs_24h_cr, 'Final',fdate, 'PYTHON3')
fdate = date2.replace(hour=23, minute=59, second=58)
arcpy.CalculateField_management(gfs_24h_cr, 'Final',fdate, 'PYTHON3')
fdate = date2.replace(hour=22, minute=59, second=58)
arcpy.CalculateField_management(gfs_24h_cr, 'Final',fdate, 'PYTHON3')
arcpy.AddField_management(gfs_24h_cr,'final', 'DATE')
arcpy.CalculateField_management(gfs_24h_cr, 'final',fdate, 'PYTHON3')
arcpy.CalculateField_management(gfs_24h_cr, 'final', date2.replace(hour=23), 'PYTHON3')
date2
arcpy.CalculateField_management(gfs_24h_cr, 'inicio',fdate, 'PYTHON3')
sdate = date2.replace(hour=0, minute=0, second=0)
print(sdate)
print(fdate)
fdate = date2.replace(hour=23, minute=59, second=59)
arcpy.CalculateField_management(gfs_24h_cr, 'final',fdate)
arcpy.CalculateField_management(gfs_24h_cr, 'final',sdate)
arcpy.CalculateField_management(gfs_24h_cr, 'final',fdate)
arcpy.CalculateField_management(gfs_24h_cr, 'inicio','datetime.datetime.now().replace(hour=0, minute=0, second=0)', 'PYTHON3')
arcpy.CalculateField_management(gfs_24h_cr, 'inicio','datetime.datetime.now().replace(hour=0, minute=0, second=0)')
arcpy.CalculateField_management(gfs_24h_cr, 'final','datetime.datetime.now().replace(hour=23, minute=59, second=59)')
datetime.datetime.now().replace(hour=0, minute=0, second=0) + datetime.timedelta(day=1)
print(datetime.datetime.now().replace(hour=0, minute=0, second=0) + datetime.timedelta(day=1))
print(datetime.datetime.now().replace(hour=0, minute=0, second=0) + datetime.timedelta(days=1))
arcpy.Clip_analysis(gfs_48h,costa_rica,gfs_48h_cr)
arcpy.AddField_management(gfs_48h_cr,'inicio', 'DATE') arcpy.AddField_management(gfs_48h_cr,'final', 'DATE') #Calculate start and end dates arcpy.CalculateField_management(gfs_48h_cr, 'inicio','datetime.datetime.now().replace(hour=0, minute=0, second=0) + datetime.timedelta(days=1)') arcpy.CalculateField_management(gfs_48h_cr, 'final','datetime.datetime.now().replace(hour=23, minute=59, second=59) + datetime.timedelta(days=1)')
arcpy.AddField_management(gfs_48h_cr,'inicio', 'DATE')
arcpy.AddField_management(gfs_48h_cr,'final', 'DATE') #Calculate start and end dates arcpy.CalculateField_management(gfs_48h_cr, 'inicio','datetime.datetime.now().replace(hour=0, minute=0, second=0) + datetime.timedelta(days=1)') arcpy.CalculateField_management(gfs_48h_cr, 'final','datetime.datetime.now().replace(hour=23, minute=59, second=59) + datetime.timedelta(days=1)')
arcpy.Clip_analysis(gfs_48h,costa_rica,gfs_48h_cr)
arcpy.AddField_management(gfs_48h_cr,'inicio', 'DATE') arcpy.AddField_management(gfs_48h_cr,'final', 'DATE') #Calculate start and end dates arcpy.CalculateField_management(gfs_48h_cr, 'inicio','datetime.datetime.now().replace(hour=0, minute=0, second=0) + datetime.timedelta(days=1)') arcpy.CalculateField_management(gfs_48h_cr, 'final','datetime.datetime.now().replace(hour=23, minute=59, second=59) + datetime.timedelta(days=1)')
arcpy.Clip_analysis(gfs_72h,costa_rica,gfs_72h_cr) #create_time_fields arcpy.AddField_management(gfs_72h_cr,'inicio', 'DATE') arcpy.AddField_management(gfs_72h_cr,'final', 'DATE') #Calculate start and end dates arcpy.CalculateField_management(gfs_72h_cr, 'inicio','datetime.datetime.now().replace(hour=0, minute=0, second=0) + datetime.timedelta(days=2)') arcpy.CalculateField_management(gfs_72h_cr, 'final','datetime.datetime.now().replace(hour=23, minute=59, second=59) + datetime.timedelta(days=2)')  #clip 96 hours arcpy.Clip_analysis(gfs_96h,costa_rica,gfs_96h_cr) #create_time_fields arcpy.AddField_management(gfs_96h_cr,'inicio', 'DATE') arcpy.AddField_management(gfs_96h_cr,'final', 'DATE') #Calculate start and end dates arcpy.CalculateField_management(gfs_96h_cr, 'inicio','datetime.datetime.now().replace(hour=0, minute=0, second=0) + datetime.timedelta(days=3)') arcpy.CalculateField_management(gfs_96h_cr, 'final','datetime.datetime.now().replace(hour=23, minute=59, second=59) + datetime.timedelta(days=3)')  #clip 120 hours arcpy.Clip_analysis(gfs_120h,costa_rica,gfs_120h_cr) #create_time_fields arcpy.AddField_management(gfs_120h_cr,'inicio', 'DATE') arcpy.AddField_management(gfs_120h_cr,'final', 'DATE') #Calculate start and end dates arcpy.CalculateField_management(gfs_120h_cr, 'inicio','datetime.datetime.now().replace(hour=0, minute=0, second=0) + datetime.timedelta(days=4)') arcpy.CalculateField_management(gfs_120h_cr, 'final','datetime.datetime.now().replace(hour=23, minute=59, second=59) + datetime.timedelta(days=4)')  #clip 144 hours arcpy.Clip_analysis(gfs_144h,costa_rica,gfs_144h_cr) #create_time_fields arcpy.AddField_management(gfs_144h_cr,'inicio', 'DATE') arcpy.AddField_management(gfs_144h_cr,'final', 'DATE') #Calculate start and end dates arcpy.CalculateField_management(gfs_144h_cr, 'inicio','datetime.datetime.now().replace(hour=0, minute=0, second=0) + datetime.timedelta(days=5)') arcpy.CalculateField_management(gfs_144h_cr, 'final','datetime.datetime.now().replace(hour=23, minute=59, second=59) + datetime.timedelta(days=5)')  #clip 168 hours arcpy.Clip_analysis(gfs_168h,costa_rica,gfs_168h_cr) #create_time_fields arcpy.AddField_management(gfs_168h_cr,'inicio', 'DATE') arcpy.AddField_management(gfs_168h_cr,'final', 'DATE') #Calculate start and end dates arcpy.CalculateField_management(gfs_168h_cr, 'inicio','datetime.datetime.now().replace(hour=0, minute=0, second=0) + datetime.timedelta(days=6)') arcpy.CalculateField_management(gfs_168h_cr, 'final','datetime.datetime.now().replace(hour=23, minute=59, second=59) + datetime.timedelta(days=6)')  #clip 7 days arcpy.Clip_analysis(gfs_7day,costa_rica,gfs_7day_cr) #create_time_fields arcpy.AddField_management(gfs_7day_cr,'inicio', 'DATE') arcpy.AddField_management(gfs_7day_cr,'final', 'DATE') #Calculate start and end dates arcpy.CalculateField_management(gfs_7day_cr, 'inicio','datetime.datetime.now().replace(hour=0, minute=0, second=0)) arcpy.CalculateField_management(gfs_7day_cr, 'final','datetime.datetime.now().replace(hour=23, minute=59, second=59) + datetime.timedelta(days=6)')
arcpy.mp.CreateWebLayerSDDraft()
